<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Atomexa Solutions</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto:wght@300;400&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #0a0f2a 0%, #1a1f4a 100%);
            color: #e0e7ff;
            overflow-x: hidden;
            animation: fadeInBackground 1s ease-in;
        }
        @keyframes fadeInBackground {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @keyframes orbit {
            0% { transform: rotate(0deg) translateX(20px) rotate(0deg); }
            100% { transform: rotate(360deg) translateX(20px) rotate(-360deg); }
        }
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(50px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes pulseGlow {
            0% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
            100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0); }
        }
        @keyframes slideInLeft {
            from { opacity: 0; transform: translateX(-100px); }
            to { opacity: 1; transform: translateX(0); }
        }
        @keyframes holographic {
            0% { filter: hue-rotate(0deg); }
            100% { filter: hue-rotate(360deg); }
        }
        header {
            background: rgba(10, 15, 42, 0.9);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid #3b82f6;
        }
        .nav-link {
            position: relative;
            transition: color 0.3s, transform 0.3s;
        }
        .nav-link:hover {
            color: #3b82f6;
            transform: scale(1.1);
        }
        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -5px;
            left: 0;
            background: #3b82f6;
            transition: width 0.3s;
        }
        .nav-link:hover::after {
            width: 100%;
        }
        .hero h1 {
            font-family: 'Orbitron', sans-serif;
            background: linear-gradient(90deg, #00ddeb, #ff007a);
            -webkit-background-clip: text;
            color: transparent;
            animation: holographic 4s infinite linear;
        }
        .section-title {
            font-family: 'Orbitron', sans-serif;
            position: relative;
            color: #e0e7ff;
        }
        .section-title::before {
            content: '';
            position: absolute;
            width: 50px;
            height: 2px;
            background: #3b82f6;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            animation: pulseGlow 2s infinite;
        }
        .card {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(59, 130, 246, 0.2);
            border-radius: 10px;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
        }
        .orbiting-dot {
            position: absolute;
            width: 10px;
            height: 10px;
            background: #3b82f6;
            border-radius: 50%;
            animation: orbit 4s linear infinite;
        }
        .fade-in {
            animation: fadeInUp 0.8s ease-out;
        }
        .slide-in {
            animation: slideInLeft 0.8s ease-out;
        }
        .tech-shift::before {
            content: '';
            position: absolute;
            width: 100px;
            height: 100px;
            background: radial-gradient(circle, rgba(59, 130, 246, 0.2) 0%, transparent 70%);
            top: -50px;
            left: -50px;
            z-index: -1;
            animation: holographic 6s infinite linear;
        }
        .component-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
        }
        .filter-btn {
            transition: all 0.3s ease;
        }
        .filter-btn:hover {
            transform: scale(1.05);
            background: #3b82f6;
            color: #fff;
        }
        .active-filter {
            background: #3b82f6;
            color: #fff;
        }
        .bom-item {
            display: flex;
            flex-direction: column;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(59, 130, 246, 0.2);
            border-radius: 8px;
            padding: 8px;
            margin-bottom: 8px;
        }
        @media (max-width: 640px) {
            .hero h1 { font-size: 24px; }
            .hero p { font-size: 12px; }
            .section-title { font-size: 20px; }
            .card { padding: 6px; }
            .card h3, .card h4 { font-size: 14px; }
            .card p, .card li { font-size: 10px; }
            .component-grid { grid-template-columns: repeat(1, 1fr); gap: 6px; }
            .filter-btn { font-size: 10px; padding: 4px 8px; }
            .bom-item { font-size: 10px; }
            header nav { flex-direction: column; gap: 10px; }
            header h1 { font-size: 18px; }
            header .nav-link { font-size: 12px; }
            .tech-shift::before { width: 50px; height: 50px; }
        }
        @media (min-width: 641px) and (max-width: 1024px) {
            .component-grid { grid-template-columns: repeat(2, 1fr); gap: 12px; }
            .card { padding: 8px; }
            .card h3, .card h4 { font-size: 16px; }
            .card p, .card li { font-size: 12px; }
            .filter-btn { font-size: 12px; padding: 6px 12px; }
            .bom-item { font-size: 12px; }
        }
        @media (min-width: 1025px) {
            .component-grid { grid-template-columns: repeat(3, 1fr); gap: 15px; }
            .card { padding: 10px; }
            .card h3, .card h4 { font-size: 18px; }
            .card p, .card li { font-size: 14px; }
            .filter-btn { font-size: 14px; padding: 8px 16px; }
            .bom-item { font-size: 14px; }
        }
    </style>
</head>
<body class="min-h-screen">
    <header class="fixed w-full z-50 shadow-lg">
        <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
            <h1 class="text-2xl font-bold text-white flex items-center">
                <span>Atomexa</span>
                <div class="orbiting-dot" style="top: -5px; left: 70px;"></div>
            </h1>
            <div class="flex space-x-6">
                <a href="#overview" class="nav-link text-lg text-white">Overview</a>
                <a href="#components" class="nav-link text-lg text-white">Components</a>
                <a href="#protection" class="nav-link text-lg text-white">Protection</a>
                <a href="#bom" class="nav-link text-lg text-white">BOM</a>
            </div>
        </nav>
    </header>

    <main class="pt-20 pb-10">
        <section class="hero text-center py-20">
            <h1 class="text-4xl sm:text-6xl font-bold mb-4">Innovate. Control. Succeed.</h1>
            <p class="text-lg sm:text-xl max-w-2xl mx-auto">Leading the future of embedded systems for industrial automation with cutting-edge technology.</p>
        </section>

        <section id="overview" class="container mx-auto px-4 py-16 fade-in">
            <h2 class="section-title text-3xl sm:text-5xl text-center mb-10">Project Overview</h2>
            <p class="text-lg sm:text-xl max-w-2xl mx-auto mb-10">This project converts the Powder Transfer System's (PCS) lower control panel from a traditional, hard-wired relay system to a modern, flexible, and highly protected embedded system, enhancing reliability, simplifying maintenance, and enabling advanced control capabilities.</p>
            <div class="grid md:grid-cols-2 gap-10">
                <div class="card p-6 relative slide-in">
                    <h3 class="text-2xl font-semibold mb-4 text-blue-400">Key Benefits</h3>
                    <ul class="space-y-3">
                        <li class="flex items-center"><span class="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>Enhanced flexibility via software-based logic</li>
                        <li class="flex items-center"><span class="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>Improved user experience with a central HMI</li>
                        <li class="flex items-center"><span class="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>Reduced wiring complexity and maintenance</li>
                        <li class="flex items-center"><span class="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>Increased system reliability and safety</li>
                    </ul>
                </div>
                <div class="card p-6 relative tech-shift">
                    <h3 class="text-2xl font-semibold mb-4 text-blue-400">Core Technology</h3>
                    <p class="text-lg">The project leverages the STM32G474RET6 Microcontroller from STMicroelectronics, replacing discrete timers, relays, and indicators with a centralized, programmable unit. This high-performance MCU consolidates control logic, interfaces with the HMI, and operates using the existing 24VDC power supply, ensuring efficient and reliable system performance.</p>
                </div>
            </div>
        </section>

        <section id="components" class="container mx-auto px-4 py-16 fade-in">
            <h2 class="section-title text-3xl sm:text-5xl text-center mb-10">Component Explorer</h2>
            <div class="flex justify-center gap-2 mb-6 flex-wrap">
                <button data-filter="all" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">All</button>
                <button data-filter="Microcontrollers" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">Microcontrollers</button>
                <button data-filter="Display" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">Display</button>
                <button data-filter="Power Components" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">Power Components</button>
                <button data-filter="I/O Components" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">I/O Components</button>
                <button data-filter="Mechanical" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">Mechanical</button>
                <button data-filter="Miscellaneous" class="filter-btn px-4 py-2 bg-gray-800 text-white rounded-lg">Miscellaneous</button>
            </div>
            <div id="component-grid" class="component-grid"></div>
        </section>

        <section id="protection" class="container mx-auto px-4 py-16 fade-in">
            <h2 class="section-title text-3xl sm:text-5xl text-center mb-10">Highly Protected Circuit Design</h2>
            <p class="text-lg sm:text-xl max-w-2xl mx-auto mb-10">The embedded system includes multiple protection layers for reliability and safety. Hover to learn more.</p>
            <div class="grid md:grid-cols-2 gap-6">
                <div class="card p-6 hover:shadow-lg">
                    <h4 class="text-xl font-semibold mb-2 text-white">Galvanic Isolation</h4>
                    <p class="text-sm">Opto-couplers on I/O lines protect the PLC from voltage spikes and noise from field devices.</p>
                </div>
                <div class="card p-6 hover:shadow-lg">
                    <h4 class="text-xl font-semibold mb-2 text-white">EMI/RFI Filtering</h4>
                    <p class="text-sm">Power line filters and shielded cables suppress high-frequency noise for stable operation.</p>
                </div>
                <div class="card p-6 hover:shadow-lg">
                    <h4 class="text-xl font-semibold mb-2 text-white">Overvoltage & Overcurrent Protection</h4>
                    <p class="text-sm">TVS Diodes and fuses protect against transient spikes and short circuits, isolating faults.</p>
                </div>
                <div class="card p-6 hover:shadow-lg">
                    <h4 class="text-xl font-semibold mb-2 text-white">Environmental & Mechanical Protection</h4>
                    <p class="text-sm">IP66-rated SS304 enclosure with vibration damping protects against dust, moisture, and stress.</p>
                </div>
            </div>
        </section>

        <section id="bom" class="container mx-auto px-4 py-16 fade-in">
            <h2 class="section-title text-3xl sm:text-5xl text-center mb-10">Bill of Materials</h2>
            <p class="text-lg sm:text-xl max-w-2xl mx-auto mb-10">Detailed list of components for the modernized PCS control panel.</p>
            <div id="bom-list" class="space-y-4"></div>
        </section>
    </main>

    <footer class="bg-gray-900 py-6 text-center">
        <p class="text-sm">&copy; 2025 Atomexa Solutions. All rights reserved.</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const sections = document.querySelectorAll('section');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('fade-in', 'slide-in');
                    }
                });
            }, { threshold: 0.1 });

            sections.forEach(section => observer.observe(section));

            const navLinks = document.querySelectorAll('.nav-link');
            navLinks.forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    const targetId = link.getAttribute('href');
                    document.querySelector(targetId).scrollIntoView({ behavior: 'smooth' });
                });
            });

            const componentData = [
                { name: 'Main MCU', category: 'Microcontrollers', component: 'STM32G474RET6', manufacturer: 'STMicroelectronics', quantity: '1' },
                { name: 'HMI Display', category: 'Display', component: 'Nextion 3.5" HMI', manufacturer: 'Nextion (ITEAD)', quantity: '1' },
                { name: 'HMI-MCU Cable', category: 'Display', component: '4-Pin Jumper Wires', manufacturer: 'N/A', quantity: '1' },
                { name: 'Power IC (MCU)', category: 'Power Components', component: 'LM2596S-3.3', manufacturer: 'Texas Instruments', quantity: '1' },
                { name: 'Power Diode', category: 'Power Components', component: 'Schottky (SS34)', manufacturer: 'N/A', quantity: '1' },
                { name: 'Filter Cap (24V)', category: 'Power Components', component: '100µF, 50V', manufacturer: 'N/A', quantity: '1' },
                { name: 'Filter Cap (24V)', category: 'Power Components', component: '0.1µF Ceramic', manufacturer: 'N/A', quantity: '1' },
                { name: 'Filter Cap (3.3V)', category: 'Power Components', component: '10µF, 10V', manufacturer: 'N/A', quantity: '1' },
                { name: 'Filter Cap (3.3V)', category: 'Power Components', component: '0.1µF Ceramic', manufacturer: 'N/A', quantity: '1' },
                { name: 'TVS Diode (24V)', category: 'Power Components', component: 'SMBJ24A', manufacturer: 'Littelfuse', quantity: '1' },
                { name: 'TVS Diode (3.3V)', category: 'Power Components', component: 'SMF3.3A', manufacturer: 'Vishay', quantity: '1' },
                { name: 'Input Optocoupler', category: 'I/O Components', component: 'HCPL-0630', manufacturer: 'Broadcom', quantity: '5' },
                { name: 'Output SSR', category: 'I/O Components', component: 'G3VM-61G1', manufacturer: 'Omron', quantity: '8' },
                { name: 'Input Resistors', category: 'I/O Components', component: '1.8 kΩ, 1/4W', manufacturer: 'N/A', quantity: '5' },
                { name: 'Output Resistors', category: 'I/O Components', component: '10 kΩ, 1/4W', manufacturer: 'N/A', quantity: '8' },
                { name: 'Output Transistors', category: 'I/O Components', component: 'MOSFET (2N7000)', manufacturer: 'N/A', quantity: '8' },
                { name: 'MCU Crystal', category: 'Microcontrollers', component: '8 MHz Crystal', manufacturer: 'N/A', quantity: '1' },
                { name: 'Reset Button', category: 'Miscellaneous', component: 'Tactile Switch', manufacturer: 'N/A', quantity: '1' },
                { name: 'Power LED', category: 'Power Components', component: 'Green LED', manufacturer: 'N/A', quantity: '1' },
                { name: 'Heartbeat LED', category: 'Power Components', component: 'Blue LED', manufacturer: 'N/A', quantity: '1' },
                { name: 'Limit Resistor', category: 'Power Components', component: '330 Ω, 1/4W', manufacturer: 'N/A', quantity: '2' },
                { name: 'Input Terminal', category: 'I/O Components', component: '2-pin Terminal', manufacturer: 'Phoenix Contact', quantity: '5' },
                { name: 'Output Terminal', category: 'I/O Components', component: '2-pin Terminal', manufacturer: 'Phoenix Contact', quantity: '8' },
                { name: 'PCB Terminal', category: 'I/O Components', component: '2-pin Connector', manufacturer: 'N/A', quantity: '2' },
                { name: 'DIN Rail Holder', category: 'Mechanical', component: '—', manufacturer: 'Phoenix Contact', quantity: '1' },
                { name: 'Custom PCB', category: 'Mechanical', component: '—', manufacturer: 'Local Fabricator', quantity: '1' },
                { name: 'Wires', category: 'Mechanical', component: '22AWG Wires', manufacturer: 'N/A', quantity: '1 Roll' },
                { name: 'Wire Ferrules', category: 'Mechanical', component: '0.5 mm²', manufacturer: 'N/A', quantity: '1 Pack' },
                { name: 'Cable Ties', category: 'Mechanical', component: 'Assorted Ties', manufacturer: 'N/A', quantity: '1 Pack' },
                { name: 'Heat Shrink', category: 'Mechanical', component: 'Assorted Sizes', manufacturer: 'N/A', quantity: '1 Pack' },
                { name: 'Misc Material', category: 'Mechanical', component: 'Solder, Flux', manufacturer: 'N/A', quantity: '1 Lot' },
                { name: 'Transport', category: 'Miscellaneous', component: '—', manufacturer: 'N/A', quantity: 'N/A' },
                { name: 'Labour', category: 'Miscellaneous', component: '—', manufacturer: 'N/A', quantity: 'N/A' }
            ];

            const componentGrid = document.getElementById('component-grid');
            const filterButtons = document.querySelectorAll('.filter-btn');

            const renderComponents = (filter = 'all') => {
                componentGrid.innerHTML = '';
                const filteredData = filter === 'all' ? componentData : componentData.filter(c => c.category === filter);
                filteredData.forEach(component => {
                    const card = document.createElement('div');
                    card.className = 'card p-6 text-center';
                    card.innerHTML = `
                        <h4 class="text-xl font-semibold mb-2 text-white">${component.name}</h4>
                        <p class="text-sm">${component.category}</p>
                        <p class="text-sm"><strong>Component:</strong> ${component.component}</p>
                        <p class="text-sm"><strong>Mfr:</strong> ${component.manufacturer}</p>
                        <p class="text-sm"><strong>Qty:</strong> ${component.quantity}</p>
                    `;
                    componentGrid.appendChild(card);
                });
            };

            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const filter = button.dataset.filter;
                    filterButtons.forEach(btn => btn.classList.remove('active-filter'));
                    button.classList.add('active-filter');
                    renderComponents(filter);
                });
            });

            renderComponents('all');

            const bomData = [
                { srNo: '1', description: 'Main MCU', name: 'STM32G474RET6', company: 'STMicroelectronics', qty: '1' },
                { srNo: '2', description: 'HMI Display', name: 'Nextion 3.5" HMI', company: 'Nextion (ITEAD)', qty: '1' },
                { srNo: '3', description: 'HMI-MCU Cable', name: '4-Pin Jumper Wires', company: 'N/A', qty: '1' },
                { srNo: '4', description: 'Power IC (MCU)', name: 'LM2596S-3.3', company: 'Texas Instruments', qty: '1' },
                { srNo: '5', description: 'Power Diode', name: 'Schottky (SS34)', company: 'N/A', qty: '1' },
                { srNo: '6', description: 'Filter Cap (24V)', name: '100µF, 50V', company: 'N/A', qty: '1' },
                { srNo: '7', description: 'Filter Cap (24V)', name: '0.1µF Ceramic', company: 'N/A', qty: '1' },
                { srNo: '8', description: 'Filter Cap (3.3V)', name: '10µF, 10V', company: 'N/A', qty: '1' },
                { srNo: '9', description: 'Filter Cap (3.3V)', name: '0.1µF Ceramic', company: 'N/A', qty: '1' },
                { srNo: '10', description: 'TVS Diode (24V)', name: 'SMBJ24A', company: 'Littelfuse', qty: '1' },
                { srNo: '11', description: 'TVS Diode (3.3V)', name: 'SMF3.3A', company: 'Vishay', qty: '1' },
                { srNo: '12', description: 'Input Optocoupler', name: 'HCPL-0630', company: 'Broadcom', qty: '5' },
                { srNo: '13', description: 'Output SSR', name: 'G3VM-61G1', company: 'Omron', qty: '8' },
                { srNo: '14', description: 'Input Resistors', name: '1.8 kΩ, 1/4W', company: 'N/A', qty: '5' },
                { srNo: '15', description: 'Output Resistors', name: '10 kΩ, 1/4W', company: 'N/A', qty: '8' },
                { srNo: '16', description: 'Output Transistors', name: 'MOSFET (2N7000)', company: 'N/A', qty: '8' },
                { srNo: '17', description: 'MCU Crystal', name: '8 MHz Crystal', company: 'N/A', qty: '1' },
                { srNo: '18', description: 'Reset Button', name: 'Tactile Switch', company: 'N/A', qty: '1' },
                { srNo: '19', description: 'Power LED', name: 'Green LED', company: 'N/A', qty: '1' },
                { srNo: '20', description: 'Heartbeat LED', name: 'Blue LED', company: 'N/A', qty: '1' },
                { srNo: '21', description: 'Limit Resistor', name: '330 Ω, 1/4W', company: 'N/A', qty: '2' },
                { srNo: '22', description: 'Input Terminal', name: '2-pin Terminal', company: 'Phoenix Contact', qty: '5' },
                { srNo: '23', description: 'Output Terminal', name: '2-pin Terminal', company: 'Phoenix Contact', qty: '8' },
                { srNo: '24', description: 'PCB Terminal', name: '2-pin Connector', company: 'N/A', qty: '2' },
                { srNo: '25', description: 'DIN Rail Holder', name: '—', company: 'Phoenix Contact', qty: '1' },
                { srNo: '26', description: 'Custom PCB', name: '—', company: 'Local Fabricator', qty: '1' },
                { srNo: '27', description: 'Wires', name: '22AWG Wires', company: 'N/A', qty: '1 Roll' },
                { srNo: '28', description: 'Wire Ferrules', name: '0.5 mm²', company: 'N/A', qty: '1 Pack' },
                { srNo: '29', description: 'Cable Ties', name: 'Assorted Ties', company: 'N/A', qty: '1 Pack' },
                { srNo: '30', description: 'Heat Shrink', name: 'Assorted Sizes', company: 'N/A', qty: '1 Pack' },
                { srNo: '31', description: 'Misc Material', name: 'Solder, Flux', company: 'N/A', qty: '1 Lot' },
                { srNo: '32', description: 'Transport', name: '—', company: 'N/A', qty: 'N/A' },
                { srNo: '33', description: 'Labour', name: '—', company: 'N/A', qty: 'N/A' }
            ];

            const bomList = document.getElementById('bom-list');
            bomData.forEach(item => {
                const bomItem = document.createElement('div');
                bomItem.className = 'bom-item';
                bomItem.innerHTML = `
                    <span><strong>Sr. No:</strong> ${item.srNo}</span>
                    <span><strong>Description:</strong> ${item.description}</span>
                    <span><strong>Name:</strong> ${item.name}</span>
                    <span><strong>Company:</strong> ${item.company}</span>
                    <span><strong>Qty:</strong> ${item.qty}</span>
                `;
                bomList.appendChild(bomItem);
            });
        });
    </script>
</body>
</html>
